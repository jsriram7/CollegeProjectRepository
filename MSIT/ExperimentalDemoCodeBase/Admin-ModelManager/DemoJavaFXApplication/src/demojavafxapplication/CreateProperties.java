/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demojavafxapplication;

import ModelClasses.DropDownModel;
import ModelClasses.NodeModel;
import ModelClasses.TextAreaModel;
import ModelClasses.TextBoxModel;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.codehaus.jackson.map.ObjectMapper;

/**
 *
 * @author Welcome
 */
public class CreateProperties extends javax.swing.JFrame {

    /**
     * Creates new form CreateProperties
     */
    private Map<String, String> modelMap = new HashMap<String, String>();

    public CreateProperties() {
        //initComponents();
        customInitialise();
    }

    public void customInitialise() {
        //JOptionPane.showMessageDialog(null, "thank you for using java");
        
        Vector<String> dropDownValues = new <String>Vector();
        //JComboBox nodesAvailableComboBox = new JComboBox();
        String workingDir = System.getProperty("user.dir");
        File directory = new File(workingDir + "\\temp\\");
        if (!directory.exists()) {
            System.out.println("creating directory: " + "temp");
            try {
                directory.mkdir();
            } catch (SecurityException se) {
                //handle it
            }
            JOptionPane.showMessageDialog(null, "No nodes present in the mode\nPlease create a node in the model");
        } else {
            
            initComponents();
            yesRadioButton.setActionCommand("Yes");
            noRadioButton.setActionCommand("No");
            File[] contents = directory.listFiles();
            for (File f : contents) {
                System.out.println(f.getAbsolutePath());
                ObjectMapper mapper = new ObjectMapper();
                try {
                    NodeModel n = mapper.readValue(new File(f.getAbsolutePath()), NodeModel.class);
                    System.out.println(n.getName());
                    dropDownValues.add(n.getName());
                    modelMap.put(n.getName(), f.getAbsolutePath());
                } catch (Exception e) {
                }
            }
            System.out.println(dropDownValues);
            for (String v : dropDownValues) {
                nodesAvailableComboBox.addItem(v);
            }
                //JComboBox comboBox = new JComboBox(model);
            //this.add(comboBox);
            dropdownPanel.setVisible(false);
            buttonGroup1.add(yesRadioButton);
            buttonGroup1.add(noRadioButton);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel9 = new javax.swing.JLabel();
        nodesAvailableComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        yesRadioButton = new javax.swing.JRadioButton();
        noRadioButton = new javax.swing.JRadioButton();
        dropdownPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        defaultTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        customDropDownTextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();

        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Define Properties");

        jLabel2.setText("Node:");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "textbox", "dropdown", "textarea" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setText("Type:");

        jLabel4.setText("Name:");

        jLabel5.setText("Required:");

        buttonGroup1.add(yesRadioButton);
        yesRadioButton.setText("Yes");

        buttonGroup1.add(noRadioButton);
        noRadioButton.setText("No");

        jLabel6.setText("Default:");

        jLabel7.setText("Values:");

        customDropDownTextArea.setColumns(20);
        customDropDownTextArea.setRows(5);
        jScrollPane1.setViewportView(customDropDownTextArea);

        jLabel8.setText("Separate each value by new line.");

        javax.swing.GroupLayout dropdownPanelLayout = new javax.swing.GroupLayout(dropdownPanel);
        dropdownPanel.setLayout(dropdownPanelLayout);
        dropdownPanelLayout.setHorizontalGroup(
            dropdownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropdownPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropdownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6))
                .addGap(38, 38, 38)
                .addGroup(dropdownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dropdownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(defaultTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jLabel8))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        dropdownPanelLayout.setVerticalGroup(
            dropdownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropdownPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropdownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(defaultTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(dropdownPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dropdownPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7))
                    .addGroup(dropdownPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nodesAvailableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(nameTextField)
                                .addComponent(typeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(yesRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(noRadioButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(dropdownPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(saveButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel1)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nodesAvailableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(yesRadioButton)
                    .addComponent(noRadioButton))
                .addGap(18, 18, 18)
                .addComponent(dropdownPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:
        String selectedValue = typeComboBox.getSelectedItem().toString();
        System.out.println(selectedValue);
        if ("textbox".equalsIgnoreCase(selectedValue) || "textarea".equalsIgnoreCase(selectedValue)) {
            //nameTextField.setVisible(true);
            //yesRadioButton.setVisible(true);
            //noRadioButton.setVisible(true);
            //buttonGroup1.add(yesRadioButton);
            //buttonGroup1.add(noRadioButton);
            //defaultTextField.setVisible(false);
            //customDropDownTextArea.setVisible(false);
            dropdownPanel.setVisible(false);
        } else if ("dropdown".equalsIgnoreCase(selectedValue)) {
            //nameTextField.setVisible(true);
            //yesRadioButton.setVisible(true);
            //noRadioButton.setVisible(true);
            //buttonGroup1.add(yesRadioButton);
            //buttonGroup1.add(noRadioButton);
            //defaultTextField.setVisible(true);
            //customDropDownTextArea.setVisible(true);
            dropdownPanel.setVisible(true);
        }
    }//GEN-LAST:event_typeComboBoxActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        NodeModel n = new NodeModel();
        String filepath = null;
        ObjectMapper mapper = new ObjectMapper();
        if (!modelMap.isEmpty()) {
            filepath = modelMap.get(nodesAvailableComboBox.getSelectedItem().toString());
            if (filepath != null) {
                try {
                    n = mapper.readValue(new File(filepath), NodeModel.class);
                } catch (Exception e) {
                    System.out.println("Exception occurred while fetching object from file");
                }
            } else {
                System.out.println("No file found in the location");
            }
        }
        if ("textbox".equalsIgnoreCase(typeComboBox.getSelectedItem().toString())) {
            TextBoxModel textBox = new TextBoxModel();
            textBox.setType("textbox");
            textBox.setLabel(nameTextField.getText());
            textBox.setIsRequired(buttonGroup1.getSelection().getActionCommand());

            try {
                List<TextBoxModel> textBoxProperties = n.getProperties().getTextBoxProperties();
                textBoxProperties.add(textBox);
                n.getProperties().setTextBoxProperties(textBoxProperties);
                mapper.defaultPrettyPrintingWriter().writeValue(new File(filepath), n);
                JOptionPane.showMessageDialog(null, "Property"+" "+nameTextField.getText()+" "+" added as a" +" " +typeComboBox.getSelectedItem().toString());
            } catch (Exception e) {
                System.out.println("Exception occurred while writing adding textbox properties the properties");
            }

        }
        if ("textarea".equalsIgnoreCase(typeComboBox.getSelectedItem().toString())) {
            TextAreaModel textArea = new TextAreaModel();
            textArea.setType("textarea");
            textArea.setLabel(nameTextField.getText());
            textArea.setIsRequired(buttonGroup1.getSelection().getActionCommand());

            try {
                List<TextAreaModel> textAreaProperties = n.getProperties().getTextAreaProperties();
                textAreaProperties.add(textArea);
                n.getProperties().setTextAreaProperties(textAreaProperties);
                mapper.defaultPrettyPrintingWriter().writeValue(new File(filepath), n);
                JOptionPane.showMessageDialog(null, "Property"+" "+nameTextField.getText()+" "+" added as a" +" " +typeComboBox.getSelectedItem().toString());
            } catch (Exception e) {
                System.out.println("Exception occurred while writing adding textarea properties the properties");
            }

        }
        if ("dropdown".equalsIgnoreCase(typeComboBox.getSelectedItem().toString())) {
            List<String> values=Arrays.asList(customDropDownTextArea.getText().split("[\\r\\n]+"));
            DropDownModel dropDown = new DropDownModel();
            dropDown.setType("dropdown");
            dropDown.setLabel(nameTextField.getText());
            dropDown.setValues(values);
            dropDown.setIsRequired(buttonGroup1.getSelection().getActionCommand());
            if(values.contains(defaultTextField.getText()) || defaultTextField==null){
            dropDown.setDefaultValue(defaultTextField.getText());
            try {
                List<DropDownModel> dropDownProperties = n.getProperties().getDropDownProperties();
                dropDownProperties.add(dropDown);
                n.getProperties().setDropDownProperties(dropDownProperties);
                mapper.defaultPrettyPrintingWriter().writeValue(new File(filepath), n);
                JOptionPane.showMessageDialog(null, "Property"+" "+nameTextField.getText()+" "+" added as a" +" " +typeComboBox.getSelectedItem().toString());
            } catch (Exception e) {
                System.out.println("Exception occurred while writing adding dropdown properties the properties");
            }
            }
            else{
            JOptionPane.showMessageDialog(null, "Default value"+" "+defaultTextField.getText()+" "+"not present in the value list");
            }
            

            

        }

    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateProperties.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new CreateProperties().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea customDropDownTextArea;
    private javax.swing.JTextField defaultTextField;
    private javax.swing.JPanel dropdownPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JRadioButton noRadioButton;
    private javax.swing.JComboBox nodesAvailableComboBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox typeComboBox;
    private javax.swing.JRadioButton yesRadioButton;
    // End of variables declaration//GEN-END:variables
}
